#-----------------------------------------------------------
# Vivado v2020.2 (64-bit)
# SW Build 3064766 on Wed Nov 18 09:12:45 MST 2020
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
# Start of session at: Wed May 28 23:32:55 2025
# Process ID: 27984
# Current directory: C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1
# Command line: vivado.exe -log micro_core_v0_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source micro_core_v0_wrapper.tcl -notrace
# Log file: C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1/micro_core_v0_wrapper.vdi
# Journal file: C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1\vivado.jou
#-----------------------------------------------------------
source micro_core_v0_wrapper.tcl -notrace
Command: open_checkpoint micro_core_v0_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.074 . Memory (MB): peak = 1112.801 ; gain = 0.000
INFO: [Device 21-403] Loading part xc7a35tcpg236-1
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.334 . Memory (MB): peak = 1112.801 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 3200 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
WARNING: [Constraints 18-550] Could not create 'IBUF_LOW_PWR' constraint because net 'micro_core_v0_i/clk_wiz_0/clk_in1' is not directly connected to top level port. Synthesis is ignored for IBUF_LOW_PWR but preserved for implementation.
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 1719.609 ; gain = 13.574
Restored from archive | CPU: 2.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 1719.609 ; gain = 13.574
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.010 . Memory (MB): peak = 1719.609 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 113 instances were transformed.
  LUT6_2 => LUT6_2 (LUT5, LUT6): 95 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 16 instances
  SRLC16E => SRL16E: 2 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2020.2 (64-bit) build 3064766
open_checkpoint: Time (s): cpu = 00:00:26 ; elapsed = 00:01:38 . Memory (MB): peak = 1721.629 ; gain = 608.828
Command: write_bitstream -force micro_core_v0_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/XVITIS/Vivado/2020.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC CFGBVS-1] Missing CFGBVS and CONFIG_VOLTAGE Design Properties: Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I3/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 output micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I3/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 multiplier stage micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 166 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./micro_core_v0_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Common 17-83] Releasing license: Implementation
21 Infos, 167 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:30 ; elapsed = 00:00:25 . Memory (MB): peak = 2317.738 ; gain = 596.109
INFO: [Common 17-206] Exiting Vivado at Wed May 28 23:35:07 2025...
