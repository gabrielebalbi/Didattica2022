
*** Running vivado
    with args -log micro_core_v0_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source micro_core_v0_wrapper.tcl -notrace



****** Vivado v2020.2 (64-bit)
  **** SW Build 3064766 on Wed Nov 18 09:12:45 MST 2020
  **** IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source micro_core_v0_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/XVITIS/Vivado/2020.2/data/ip'.
Command: link_design -top micro_core_v0_wrapper -part xc7a35tcpg236-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7a35tcpg236-1
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_gpio_0_0/micro_core_v0_axi_gpio_0_0.dcp' for cell 'micro_core_v0_i/axi_gpio_0'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_uartlite_0_0/micro_core_v0_axi_uartlite_0_0.dcp' for cell 'micro_core_v0_i/axi_uartlite_0'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_clk_wiz_0_0/micro_core_v0_clk_wiz_0_0.dcp' for cell 'micro_core_v0_i/clk_wiz_0'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_mdm_1_1/micro_core_v0_mdm_1_1.dcp' for cell 'micro_core_v0_i/mdm_1'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_microblaze_0_1/micro_core_v0_microblaze_0_1.dcp' for cell 'micro_core_v0_i/microblaze_0'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_rst_sys_clock_12M_0/micro_core_v0_rst_sys_clock_12M_0.dcp' for cell 'micro_core_v0_i/rst_sys_clock_12M'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_xbar_0/micro_core_v0_xbar_0.dcp' for cell 'micro_core_v0_i/microblaze_0_axi_periph/xbar'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_dlmb_bram_if_cntlr_2/micro_core_v0_dlmb_bram_if_cntlr_2.dcp' for cell 'micro_core_v0_i/microblaze_0_local_memory/dlmb_bram_if_cntlr'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_dlmb_v10_2/micro_core_v0_dlmb_v10_2.dcp' for cell 'micro_core_v0_i/microblaze_0_local_memory/dlmb_v10'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_ilmb_bram_if_cntlr_2/micro_core_v0_ilmb_bram_if_cntlr_2.dcp' for cell 'micro_core_v0_i/microblaze_0_local_memory/ilmb_bram_if_cntlr'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_ilmb_v10_2/micro_core_v0_ilmb_v10_2.dcp' for cell 'micro_core_v0_i/microblaze_0_local_memory/ilmb_v10'
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_lmb_bram_2/micro_core_v0_lmb_bram_2.dcp' for cell 'micro_core_v0_i/microblaze_0_local_memory/lmb_bram'
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.608 . Memory (MB): peak = 1117.355 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 3217 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Opt 31-140] Inserted 1 IBUFs to IO ports without IO buffers.
WARNING: [Opt 31-35] Removing redundant IBUF, micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/clk_inst/clkin1_ibufg, from the path connected to top-level port: sys_clock 
Resolution: The tool has removed redundant IBUF. To resolve this warning, check for redundant IBUF in the input design.
WARNING: [Constraints 18-550] Could not create 'IBUF_LOW_PWR' constraint because net 'micro_core_v0_i/clk_wiz_0/clk_in1' is not directly connected to top level port. Synthesis is ignored for IBUF_LOW_PWR but preserved for implementation.
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_uartlite_0_0/micro_core_v0_axi_uartlite_0_0_board.xdc] for cell 'micro_core_v0_i/axi_uartlite_0/U0'
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_uartlite_0_0/micro_core_v0_axi_uartlite_0_0_board.xdc] for cell 'micro_core_v0_i/axi_uartlite_0/U0'
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_uartlite_0_0/micro_core_v0_axi_uartlite_0_0.xdc] for cell 'micro_core_v0_i/axi_uartlite_0/U0'
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_uartlite_0_0/micro_core_v0_axi_uartlite_0_0.xdc] for cell 'micro_core_v0_i/axi_uartlite_0/U0'
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_microblaze_0_1/micro_core_v0_microblaze_0_1.xdc] for cell 'micro_core_v0_i/microblaze_0/U0'
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_microblaze_0_1/micro_core_v0_microblaze_0_1.xdc] for cell 'micro_core_v0_i/microblaze_0/U0'
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_mdm_1_1/micro_core_v0_mdm_1_1.xdc] for cell 'micro_core_v0_i/mdm_1/U0'
INFO: [Timing 38-35] Done setting XDC timing constraints. [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_mdm_1_1/micro_core_v0_mdm_1_1.xdc:50]
get_clocks: Time (s): cpu = 00:00:10 ; elapsed = 00:00:10 . Memory (MB): peak = 1765.211 ; gain = 596.066
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_mdm_1_1/micro_core_v0_mdm_1_1.xdc] for cell 'micro_core_v0_i/mdm_1/U0'
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_rst_sys_clock_12M_0/micro_core_v0_rst_sys_clock_12M_0_board.xdc] for cell 'micro_core_v0_i/rst_sys_clock_12M/U0'
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_rst_sys_clock_12M_0/micro_core_v0_rst_sys_clock_12M_0_board.xdc] for cell 'micro_core_v0_i/rst_sys_clock_12M/U0'
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_rst_sys_clock_12M_0/micro_core_v0_rst_sys_clock_12M_0.xdc] for cell 'micro_core_v0_i/rst_sys_clock_12M/U0'
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_rst_sys_clock_12M_0/micro_core_v0_rst_sys_clock_12M_0.xdc] for cell 'micro_core_v0_i/rst_sys_clock_12M/U0'
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_clk_wiz_0_0/micro_core_v0_clk_wiz_0_0_board.xdc] for cell 'micro_core_v0_i/clk_wiz_0/inst'
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_clk_wiz_0_0/micro_core_v0_clk_wiz_0_0_board.xdc] for cell 'micro_core_v0_i/clk_wiz_0/inst'
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_clk_wiz_0_0/micro_core_v0_clk_wiz_0_0.xdc] for cell 'micro_core_v0_i/clk_wiz_0/inst'
INFO: [Timing 38-2] Deriving generated clocks [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_clk_wiz_0_0/micro_core_v0_clk_wiz_0_0.xdc:57]
WARNING: [Vivado 12-2489] -input_jitter contains time 0.833330 which will be rounded to 0.833 to ensure it is an integer multiple of 1 picosecond [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_clk_wiz_0_0/micro_core_v0_clk_wiz_0_0.xdc:57]
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_clk_wiz_0_0/micro_core_v0_clk_wiz_0_0.xdc] for cell 'micro_core_v0_i/clk_wiz_0/inst'
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_gpio_0_0/micro_core_v0_axi_gpio_0_0_board.xdc] for cell 'micro_core_v0_i/axi_gpio_0/U0'
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_gpio_0_0/micro_core_v0_axi_gpio_0_0_board.xdc] for cell 'micro_core_v0_i/axi_gpio_0/U0'
Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_gpio_0_0/micro_core_v0_axi_gpio_0_0.xdc] for cell 'micro_core_v0_i/axi_gpio_0/U0'
Finished Parsing XDC File [c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_axi_gpio_0_0/micro_core_v0_axi_gpio_0_0.xdc] for cell 'micro_core_v0_i/axi_gpio_0/U0'
Parsing XDC File [C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.srcs/constrs_1/imports/constrs_1/imports/new/top.xdc]
Finished Parsing XDC File [C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.srcs/constrs_1/imports/constrs_1/imports/new/top.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Generating merged BMM file for the design top 'micro_core_v0_wrapper'...
INFO: [Memdata 28-144] Successfully populated the BRAM INIT strings from the following elf files: c:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.gen/sources_1/bd/micro_core_v0/ip/micro_core_v0_microblaze_0_1/data/mb_bootloop_le.elf 
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.011 . Memory (MB): peak = 1765.211 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 112 instances were transformed.
  LUT6_2 => LUT6_2 (LUT5, LUT6): 96 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 16 instances

26 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:33 ; elapsed = 00:01:14 . Memory (MB): peak = 1765.211 ; gain = 647.855
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 1765.211 ; gain = 0.000

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: e6ebb427

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 1782.219 ; gain = 17.008

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 1 inverter(s) to 1 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: dff885ce

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 1989.430 ; gain = 0.090
INFO: [Opt 31-389] Phase Retarget created 97 cells and removed 225 cells
INFO: [Opt 31-1021] In phase Retarget, 5 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: cad54a7c

Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 1989.430 ; gain = 0.090
INFO: [Opt 31-389] Phase Constant propagation created 5 cells and removed 42 cells
INFO: [Opt 31-1021] In phase Constant propagation, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 10442878c

Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1989.430 ; gain = 0.090
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 45 cells
INFO: [Opt 31-1021] In phase Sweep, 10 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
INFO: [Opt 31-194] Inserted BUFG sys_clock_IBUF_BUFG_inst to drive 3200 load(s) on clock net sys_clock_IBUF_BUFG
INFO: [Opt 31-194] Inserted BUFG micro_core_v0_i/mdm_1/U0/Use_E2.BSCAN_I/Dbg_Update_0_BUFG_inst to drive 39 load(s) on clock net micro_core_v0_i/mdm_1/U0/Use_E2.BSCAN_I/Dbg_Update_0_BUFG
INFO: [Opt 31-193] Inserted 2 BUFG(s) on clock nets
Phase 4 BUFG optimization | Checksum: 16189f75d

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 1989.430 ; gain = 0.090
INFO: [Opt 31-662] Phase BUFG optimization created 2 cells of which 2 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 16189f75d

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 1989.430 ; gain = 0.090
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 16189f75d

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 1989.430 ; gain = 0.090
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |              97  |             225  |                                              5  |
|  Constant propagation         |               5  |              42  |                                              1  |
|  Sweep                        |               0  |              45  |                                             10  |
|  BUFG optimization            |               2  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                              1  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.102 . Memory (MB): peak = 1989.430 ; gain = 0.000
Ending Logic Optimization Task | Checksum: e7dbe6bd

Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 1989.430 ; gain = 0.090

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 4 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 0 newly gated: 0 Total Ports: 8
Ending PowerOpt Patch Enables Task | Checksum: e7dbe6bd

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.185 . Memory (MB): peak = 2111.883 ; gain = 0.000
Ending Power Optimization Task | Checksum: e7dbe6bd

Time (s): cpu = 00:00:15 ; elapsed = 00:00:08 . Memory (MB): peak = 2111.883 ; gain = 122.453

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: e7dbe6bd

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2111.883 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.017 . Memory (MB): peak = 2111.883 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: e7dbe6bd

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.017 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
55 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:28 ; elapsed = 00:00:20 . Memory (MB): peak = 2111.883 ; gain = 346.672
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.060 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1/micro_core_v0_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:09 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file micro_core_v0_wrapper_drc_opted.rpt -pb micro_core_v0_wrapper_drc_opted.pb -rpx micro_core_v0_wrapper_drc_opted.rpx
Command: report_drc -file micro_core_v0_wrapper_drc_opted.rpt -pb micro_core_v0_wrapper_drc_opted.pb -rpx micro_core_v0_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1/micro_core_v0_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 2111.883 ; gain = 0.000
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.029 . Memory (MB): peak = 2111.883 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 8c1acf7b

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.066 . Memory (MB): peak = 2111.883 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.024 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 110323347

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 17ee4591c

Time (s): cpu = 00:00:15 ; elapsed = 00:00:10 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 17ee4591c

Time (s): cpu = 00:00:15 ; elapsed = 00:00:10 . Memory (MB): peak = 2111.883 ; gain = 0.000
Phase 1 Placer Initialization | Checksum: 17ee4591c

Time (s): cpu = 00:00:15 ; elapsed = 00:00:10 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: f9a28e40

Time (s): cpu = 00:00:16 ; elapsed = 00:00:11 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 8cb3648c

Time (s): cpu = 00:00:17 ; elapsed = 00:00:12 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 2.3 Global Placement Core

Phase 2.3.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 3098 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-775] End 1 Pass. Optimized 1386 nets or cells. Created 0 new cell, deleted 1386 existing cells and moved 0 existing cell
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.022 . Memory (MB): peak = 2111.883 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |           1386  |                  1386  |           0  |           1  |  00:00:09  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |           1386  |                  1386  |           0  |           3  |  00:00:09  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.3.1 Physical Synthesis In Placer | Checksum: 236c1f114

Time (s): cpu = 00:00:51 ; elapsed = 00:00:38 . Memory (MB): peak = 2111.883 ; gain = 0.000
Phase 2.3 Global Placement Core | Checksum: 24f06e475

Time (s): cpu = 00:00:51 ; elapsed = 00:00:39 . Memory (MB): peak = 2111.883 ; gain = 0.000
Phase 2 Global Placement | Checksum: 24f06e475

Time (s): cpu = 00:00:51 ; elapsed = 00:00:39 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 22c48c857

Time (s): cpu = 00:00:53 ; elapsed = 00:00:39 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 2a7323842

Time (s): cpu = 00:00:56 ; elapsed = 00:00:42 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 23a29778b

Time (s): cpu = 00:00:57 ; elapsed = 00:00:43 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 20a8fe44d

Time (s): cpu = 00:00:57 ; elapsed = 00:00:43 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 1bd11a621

Time (s): cpu = 00:01:04 ; elapsed = 00:00:50 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 1b272d4f7

Time (s): cpu = 00:01:06 ; elapsed = 00:00:54 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 156185512

Time (s): cpu = 00:01:07 ; elapsed = 00:00:54 . Memory (MB): peak = 2111.883 ; gain = 0.000
Phase 3 Detail Placement | Checksum: 156185512

Time (s): cpu = 00:01:07 ; elapsed = 00:00:54 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: ab038789

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=12.173 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: c284627a

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [Place 46-33] Processed net micro_core_v0_i/clk_wiz_0/inst/AXI_LITE_IPIF_I/I_SLAVE_ATTACHMENT/rst_reg_0, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 1 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 1, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: ecc485d3

Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2111.883 ; gain = 0.000
Phase 4.1.1.1 BUFG Insertion | Checksum: ab038789

Time (s): cpu = 00:01:21 ; elapsed = 00:01:04 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [Place 30-746] Post Placement Timing Summary WNS=12.173. For the most accurate timing information please run report_timing.

Time (s): cpu = 00:01:21 ; elapsed = 00:01:04 . Memory (MB): peak = 2111.883 ; gain = 0.000
Phase 4.1 Post Commit Optimization | Checksum: f2ebd5a2

Time (s): cpu = 00:01:21 ; elapsed = 00:01:04 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: f2ebd5a2

Time (s): cpu = 00:01:21 ; elapsed = 00:01:04 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                1x1|                2x2|
|___________|___________________|___________________|
|      South|                1x1|                4x4|
|___________|___________________|___________________|
|       East|                1x1|                2x2|
|___________|___________________|___________________|
|       West|                1x1|                4x4|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: f2ebd5a2

Time (s): cpu = 00:01:21 ; elapsed = 00:01:04 . Memory (MB): peak = 2111.883 ; gain = 0.000
Phase 4.3 Placer Reporting | Checksum: f2ebd5a2

Time (s): cpu = 00:01:22 ; elapsed = 00:01:04 . Memory (MB): peak = 2111.883 ; gain = 0.000

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.034 . Memory (MB): peak = 2111.883 ; gain = 0.000

Time (s): cpu = 00:01:22 ; elapsed = 00:01:05 . Memory (MB): peak = 2111.883 ; gain = 0.000
Phase 4 Post Placement Optimization and Clean-Up | Checksum: ae4b7fe9

Time (s): cpu = 00:01:22 ; elapsed = 00:01:05 . Memory (MB): peak = 2111.883 ; gain = 0.000
Ending Placer Task | Checksum: 4c6318d8

Time (s): cpu = 00:01:22 ; elapsed = 00:01:05 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
91 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:26 ; elapsed = 00:01:07 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:10 ; elapsed = 00:00:03 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1/micro_core_v0_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:09 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file micro_core_v0_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.029 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file micro_core_v0_wrapper_utilization_placed.rpt -pb micro_core_v0_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file micro_core_v0_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.037 . Memory (MB): peak = 2111.883 ; gain = 0.000
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
100 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 2111.883 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:10 ; elapsed = 00:00:03 . Memory (MB): peak = 2131.672 ; gain = 19.789
INFO: [Common 17-1381] The checkpoint 'C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1/micro_core_v0_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:08 . Memory (MB): peak = 2131.672 ; gain = 19.789
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 44403c51 ConstDB: 0 ShapeSum: 822dc87 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: cdb784e8

Time (s): cpu = 00:00:36 ; elapsed = 00:00:27 . Memory (MB): peak = 2201.531 ; gain = 59.246
Post Restoration Checksum: NetGraph: 50d3bb55 NumContArr: 7ce3c993 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: cdb784e8

Time (s): cpu = 00:00:36 ; elapsed = 00:00:28 . Memory (MB): peak = 2201.586 ; gain = 59.301

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: cdb784e8

Time (s): cpu = 00:00:37 ; elapsed = 00:00:28 . Memory (MB): peak = 2209.820 ; gain = 67.535

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: cdb784e8

Time (s): cpu = 00:00:37 ; elapsed = 00:00:28 . Memory (MB): peak = 2209.820 ; gain = 67.535
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 23c02d4bc

Time (s): cpu = 00:00:52 ; elapsed = 00:00:38 . Memory (MB): peak = 2240.133 ; gain = 97.848
INFO: [Route 35-416] Intermediate Timing Summary | WNS=12.184 | TNS=0.000  | WHS=-0.176 | THS=-37.077|

Phase 2 Router Initialization | Checksum: 1f353850b

Time (s): cpu = 00:00:56 ; elapsed = 00:00:40 . Memory (MB): peak = 2294.711 ; gain = 152.426

Router Utilization Summary
  Global Vertical Routing Utilization    = 0.00342821 %
  Global Horizontal Routing Utilization  = 0.000650703 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 22594
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 22594
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0


Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 1f353850b

Time (s): cpu = 00:00:57 ; elapsed = 00:00:40 . Memory (MB): peak = 2294.711 ; gain = 152.426
Phase 3 Initial Routing | Checksum: 1520b9f09

Time (s): cpu = 00:01:00 ; elapsed = 00:00:42 . Memory (MB): peak = 2294.711 ; gain = 152.426

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 2304
 Number of Nodes with overlaps = 16
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=12.080 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 1f8e6ebba

Time (s): cpu = 00:01:09 ; elapsed = 00:00:49 . Memory (MB): peak = 2294.711 ; gain = 152.426

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=12.080 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1f0478fab

Time (s): cpu = 00:01:10 ; elapsed = 00:00:50 . Memory (MB): peak = 2294.711 ; gain = 152.426
Phase 4 Rip-up And Reroute | Checksum: 1f0478fab

Time (s): cpu = 00:01:10 ; elapsed = 00:00:50 . Memory (MB): peak = 2294.711 ; gain = 152.426

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 1f0478fab

Time (s): cpu = 00:01:10 ; elapsed = 00:00:50 . Memory (MB): peak = 2294.711 ; gain = 152.426

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1f0478fab

Time (s): cpu = 00:01:10 ; elapsed = 00:00:50 . Memory (MB): peak = 2294.711 ; gain = 152.426
Phase 5 Delay and Skew Optimization | Checksum: 1f0478fab

Time (s): cpu = 00:01:10 ; elapsed = 00:00:50 . Memory (MB): peak = 2294.711 ; gain = 152.426

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 223caf423

Time (s): cpu = 00:01:12 ; elapsed = 00:00:51 . Memory (MB): peak = 2294.711 ; gain = 152.426
INFO: [Route 35-416] Intermediate Timing Summary | WNS=12.182 | TNS=0.000  | WHS=0.051  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 223caf423

Time (s): cpu = 00:01:12 ; elapsed = 00:00:51 . Memory (MB): peak = 2294.711 ; gain = 152.426
Phase 6 Post Hold Fix | Checksum: 223caf423

Time (s): cpu = 00:01:12 ; elapsed = 00:00:51 . Memory (MB): peak = 2294.711 ; gain = 152.426

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 8.21614 %
  Global Horizontal Routing Utilization  = 10.4079 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 223beed58

Time (s): cpu = 00:01:12 ; elapsed = 00:00:51 . Memory (MB): peak = 2294.711 ; gain = 152.426

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 223beed58

Time (s): cpu = 00:01:12 ; elapsed = 00:00:51 . Memory (MB): peak = 2294.711 ; gain = 152.426

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 225dbebe1

Time (s): cpu = 00:01:14 ; elapsed = 00:00:53 . Memory (MB): peak = 2294.711 ; gain = 152.426

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=12.182 | TNS=0.000  | WHS=0.051  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 225dbebe1

Time (s): cpu = 00:01:14 ; elapsed = 00:00:54 . Memory (MB): peak = 2294.711 ; gain = 152.426
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:01:14 ; elapsed = 00:00:54 . Memory (MB): peak = 2294.711 ; gain = 152.426

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
115 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:01:30 ; elapsed = 00:01:03 . Memory (MB): peak = 2294.711 ; gain = 163.039
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 2295.539 ; gain = 0.828
INFO: [Common 17-1381] The checkpoint 'C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1/micro_core_v0_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:11 ; elapsed = 00:00:06 . Memory (MB): peak = 2295.539 ; gain = 0.828
INFO: [runtcl-4] Executing : report_drc -file micro_core_v0_wrapper_drc_routed.rpt -pb micro_core_v0_wrapper_drc_routed.pb -rpx micro_core_v0_wrapper_drc_routed.rpx
Command: report_drc -file micro_core_v0_wrapper_drc_routed.rpt -pb micro_core_v0_wrapper_drc_routed.pb -rpx micro_core_v0_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1/micro_core_v0_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:15 ; elapsed = 00:00:08 . Memory (MB): peak = 2324.480 ; gain = 28.941
INFO: [runtcl-4] Executing : report_methodology -file micro_core_v0_wrapper_methodology_drc_routed.rpt -pb micro_core_v0_wrapper_methodology_drc_routed.pb -rpx micro_core_v0_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file micro_core_v0_wrapper_methodology_drc_routed.rpt -pb micro_core_v0_wrapper_methodology_drc_routed.pb -rpx micro_core_v0_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file C:/Users/ilpes/Desktop/Antenne_e_clocks/project_MicroBlaze_simple/project_MicroBlaze_simple.runs/impl_1/micro_core_v0_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
INFO: [runtcl-4] Executing : report_power -file micro_core_v0_wrapper_power_routed.rpt -pb micro_core_v0_wrapper_power_summary_routed.pb -rpx micro_core_v0_wrapper_power_routed.rpx
Command: report_power -file micro_core_v0_wrapper_power_routed.rpt -pb micro_core_v0_wrapper_power_summary_routed.pb -rpx micro_core_v0_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
WARNING: [Power 33-332] Found switching activity that implies high-fanout reset nets being asserted for excessive periods of time which may result in inaccurate power analysis.
Resolution: To review and fix problems, please run Power Constraints Advisor in the GUI from Tools > Power Constraints Advisor or run report_power with the -advisory option to generate a text report.
127 Infos, 4 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 2331.223 ; gain = 6.742
INFO: [runtcl-4] Executing : report_route_status -file micro_core_v0_wrapper_route_status.rpt -pb micro_core_v0_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file micro_core_v0_wrapper_timing_summary_routed.rpt -pb micro_core_v0_wrapper_timing_summary_routed.pb -rpx micro_core_v0_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file micro_core_v0_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file micro_core_v0_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file micro_core_v0_wrapper_bus_skew_routed.rpt -pb micro_core_v0_wrapper_bus_skew_routed.pb -rpx micro_core_v0_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
Command: write_bitstream -force micro_core_v0_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC CFGBVS-1] Missing CFGBVS and CONFIG_VOLTAGE Design Properties: Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I3/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 output micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I3/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 multiplier stage micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 166 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./micro_core_v0_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Common 17-83] Releasing license: Implementation
11 Infos, 166 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:39 ; elapsed = 00:00:27 . Memory (MB): peak = 2818.867 ; gain = 485.141
INFO: [Common 17-206] Exiting Vivado at Wed May 28 22:22:29 2025...

*** Running vivado
    with args -log micro_core_v0_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source micro_core_v0_wrapper.tcl -notrace



****** Vivado v2020.2 (64-bit)
  **** SW Build 3064766 on Wed Nov 18 09:12:45 MST 2020
  **** IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source micro_core_v0_wrapper.tcl -notrace
Command: open_checkpoint micro_core_v0_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.074 . Memory (MB): peak = 1112.801 ; gain = 0.000
INFO: [Device 21-403] Loading part xc7a35tcpg236-1
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.334 . Memory (MB): peak = 1112.801 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 3200 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
WARNING: [Constraints 18-550] Could not create 'IBUF_LOW_PWR' constraint because net 'micro_core_v0_i/clk_wiz_0/clk_in1' is not directly connected to top level port. Synthesis is ignored for IBUF_LOW_PWR but preserved for implementation.
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 1719.609 ; gain = 13.574
Restored from archive | CPU: 2.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 1719.609 ; gain = 13.574
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.010 . Memory (MB): peak = 1719.609 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 113 instances were transformed.
  LUT6_2 => LUT6_2 (LUT5, LUT6): 95 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 16 instances
  SRLC16E => SRL16E: 2 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2020.2 (64-bit) build 3064766
open_checkpoint: Time (s): cpu = 00:00:26 ; elapsed = 00:01:38 . Memory (MB): peak = 1721.629 ; gain = 608.828
Command: write_bitstream -force micro_core_v0_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/XVITIS/Vivado/2020.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC CFGBVS-1] Missing CFGBVS and CONFIG_VOLTAGE Design Properties: Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 input micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 input micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 output micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I3/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 output micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I3/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/O521/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/P1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/decimal__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__0__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_0_out__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/p_2_out__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3 multiplier stage micro_core_v0_i/clk_wiz_0/inst/CLK_CORE_DRP_I/mmcm_drp_inst/sel00__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1 multiplier stage micro_core_v0_i/microblaze_0/U0/MicroBlaze_Core_I/Performance.Core/Data_Flow_I/MUL_Unit_I/Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1/Using_DSP48E1.DSP48E1_I1/Using_FPGA.DSP48E1_I1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 166 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./micro_core_v0_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Common 17-83] Releasing license: Implementation
21 Infos, 167 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:30 ; elapsed = 00:00:25 . Memory (MB): peak = 2317.738 ; gain = 596.109
INFO: [Common 17-206] Exiting Vivado at Wed May 28 23:35:07 2025...
